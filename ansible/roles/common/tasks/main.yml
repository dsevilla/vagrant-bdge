---
- name: create timezone placeholder if it does not exists
  copy: dest=/etc/timezone
        content='#{CFG_TZ}'
        owner=root
        group=root
        mode=0644
        force=no
  become: yes
  become_user: root
  notify:
    - update timezone

- name: spanish keyboard
  lineinfile: dest=/etc/rc.local
              insertbefore='^exit'
              state=present
              line='loadkeys es'
  become: yes
  become_user: root

- name: ensure recent package list
  apt: update_cache=yes
  become: yes
  become_user: root

- name: install Java 8 (OpenJDK)
  apt: pkg='{{ item }}' state=present force=yes
  with_items:
    - openjdk-8-jdk
    - jython
  become: yes
  become_user: root

- name: Set JAVA_HOME environment
  lineinfile: dest=/etc/environment
              line='export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64'
              state=present
              create=yes
  become: yes
  become_user: root

- name: Update alternatives for Java 8
  alternatives: name=java path=/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
  become: yes
  become_user: root

- name: install essential Python packages
  apt: pkg='{{ item }}' state=present
  with_items:
    - pkg-config
    - sqlite3
    - sqlite3-pcre
    - cython
    - python-pip
    - python-virtualenv
    - python-software-properties
    - python-isodate
    - python-dev
    - python-numpy
    - python-seaborn
    - python-scipy
    - python-tornado
    - python-ipdb
    - debconf-utils
    - libzmq3-dev
    - libfreetype6-dev
    - libpng12-dev
    - libjs-mathjax
    - zip
    - unzip
    - curl
    - git
    - vim
    - thrift-compiler
  become: yes
  become_user: root

- name: install Python client libraries for Thrift, HBase and Jupyter
  pip: name='{{ item }}' state=latest
  with_items:
    - thrift
    - happybase
    - jupyter
    - ipython-sql
    - pandas
    - matplotlib
    - bokeh
    - folium
    - scikit-learn
  become: yes
  become_user: root

- name: fix /etc/hosts
  lineinfile: dest=/etc/hosts
              regexp='^127\.0\..*$'
              line='127.0.0.1 localhost'
              backrefs=no
              state=present
  become: yes
  become_user: root

- name: fix /etc/hosts (2)
  lineinfile: dest=/etc/hosts
              line='{{ host_ip }} {{ host_name }}'
              state=present
  become: yes
  become_user: root

- name: create base data directory
  file: path=/data state=directory owner=vagrant group=vagrant mode=0755
  become: yes
  become_user: root

- name: create SSH config
  template: src=ssh-config.j2 dest=/home/vagrant/.ssh/config

- name: create SSH key pair for Hadoop
  command: ssh-keygen -t rsa -N "" -C "for Hadoop" -f '{{ ssh_key }}'
           creates='{{ ssh_key }}.pub'

- name: add generated key to authorized_keys
  shell: 'if grep -q Hadoop /home/vagrant/.ssh/authorized_keys; then echo "public key already added"; else sed -i -e"1a`cat {{ ssh_key }}.pub`" {{ home_dir}}/.ssh/authorized_keys; fi'
  register: ssh_result
  changed_when: ssh_result.stdout.find('public key already added') == -1
